server.port=8082

spring.datasource.url=jdbc:postgresql://localhost:5432/spring
spring.datasource.username=postgres
spring.datasource.password=postgres

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = update
spring.jpa.hibernate.naming.implicit-strategy = org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
spring.jpa.properties.hibernate.format_sql=true


spring.main.allow-bean-definition-overriding=true

# logging 
logging.level.org.springframework=ERROR
logging.level.com.mkyong=DEBUG
logging.file=app.log
logging.file=./app.log
logging.pattern.file=%d %p %c{1.} [%t] %m%n
logging.pattern.console=%d{yyyy/MM/dd HH:mm:ss.SSS} [%t] %logger{5} %level: %msg%n


spring.redis.database=0
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.timeout=60000

spring.cache.type=redis
#spring.cache.redis.cache-null-values=true
#spring.cache.redis.time-to-live=40000

kafka.topic.name= topic1
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer


#spring.cloud.circuitbreaker.resilience4j.enabled = false

#resilience4j.circuitbreaker.instances.CircuitBreakerService.failure-rate-threshold=50
#resilience4j.circuitbreaker.instances.CircuitBreakerService.minimum-number-of-calls=5
#resilience4j.circuitbreaker.instances.CircuitBreakerService.automatic-transition-from-open-to-half-open-enabled=true
#resilience4j.circuitbreaker.instances.CircuitBreakerService.wait-duration-in-open-state=5s
#resilience4j.circuitbreaker.instances.CircuitBreakerService.permitted-number-of-calls-in-half-open-state=3
#resilience4j.circuitbreaker.instances.CircuitBreakerService.sliding-window-size=10
#resilience4j.circuitbreaker.instances.CircuitBreakerService.sliding-window-type=count_based